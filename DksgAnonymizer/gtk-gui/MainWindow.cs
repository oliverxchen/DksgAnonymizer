
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.Table table1;
	private global::Gtk.Button buttonAnonymize;
	private global::Gtk.Button buttonGenerateTestInputFiles;
	private global::Gtk.Entry entrySeed;
	private global::Gtk.Label label1;
	private global::Gtk.Label labelStatus;

	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString ("DKSG Anonymizer");
		this.Icon = global::Stetic.IconLoader.LoadIcon (this, "gtk-bold", global::Gtk.IconSize.Menu);
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.table1 = new global::Gtk.Table (((uint)(5)), ((uint)(2)), true);
		this.table1.Name = "table1";
		this.table1.RowSpacing = ((uint)(6));
		this.table1.ColumnSpacing = ((uint)(6));
		// Container child table1.Gtk.Table+TableChild
		this.buttonAnonymize = new global::Gtk.Button ();
		this.buttonAnonymize.CanFocus = true;
		this.buttonAnonymize.Name = "buttonAnonymize";
		this.buttonAnonymize.UseUnderline = true;
		this.buttonAnonymize.Label = global::Mono.Unix.Catalog.GetString ("Anonymize");
		this.table1.Add (this.buttonAnonymize);
		global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table1 [this.buttonAnonymize]));
		w1.TopAttach = ((uint)(3));
		w1.BottomAttach = ((uint)(4));
		w1.XOptions = ((global::Gtk.AttachOptions)(4));
		w1.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child table1.Gtk.Table+TableChild
		this.buttonGenerateTestInputFiles = new global::Gtk.Button ();
		this.buttonGenerateTestInputFiles.CanFocus = true;
		this.buttonGenerateTestInputFiles.Name = "buttonGenerateTestInputFiles";
		this.buttonGenerateTestInputFiles.UseUnderline = true;
		this.buttonGenerateTestInputFiles.Label = global::Mono.Unix.Catalog.GetString ("Generate Test Input Files");
		this.table1.Add (this.buttonGenerateTestInputFiles);
		global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1 [this.buttonGenerateTestInputFiles]));
		w2.XOptions = ((global::Gtk.AttachOptions)(4));
		w2.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child table1.Gtk.Table+TableChild
		this.entrySeed = new global::Gtk.Entry ();
		this.entrySeed.CanFocus = true;
		this.entrySeed.Name = "entrySeed";
		this.entrySeed.Text = global::Mono.Unix.Catalog.GetString ("3847");
		this.entrySeed.IsEditable = true;
		this.entrySeed.InvisibleChar = 'â€¢';
		this.table1.Add (this.entrySeed);
		global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table1 [this.entrySeed]));
		w3.TopAttach = ((uint)(2));
		w3.BottomAttach = ((uint)(3));
		w3.LeftAttach = ((uint)(1));
		w3.RightAttach = ((uint)(2));
		w3.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child table1.Gtk.Table+TableChild
		this.label1 = new global::Gtk.Label ();
		this.label1.Name = "label1";
		this.label1.Xalign = 1F;
		this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Seed:");
		this.table1.Add (this.label1);
		global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table1 [this.label1]));
		w4.TopAttach = ((uint)(2));
		w4.BottomAttach = ((uint)(3));
		w4.XOptions = ((global::Gtk.AttachOptions)(4));
		w4.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child table1.Gtk.Table+TableChild
		this.labelStatus = new global::Gtk.Label ();
		this.labelStatus.Name = "labelStatus";
		this.table1.Add (this.labelStatus);
		global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.table1 [this.labelStatus]));
		w5.TopAttach = ((uint)(4));
		w5.BottomAttach = ((uint)(5));
		w5.XOptions = ((global::Gtk.AttachOptions)(4));
		w5.YOptions = ((global::Gtk.AttachOptions)(4));
		this.Add (this.table1);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.DefaultWidth = 726;
		this.DefaultHeight = 304;
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		this.buttonGenerateTestInputFiles.Clicked += new global::System.EventHandler (this.OnGenerateInputClick);
		this.buttonAnonymize.Clicked += new global::System.EventHandler (this.OnAnonymizeClick);
	}
}
